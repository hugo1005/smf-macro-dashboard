{"remainingRequest":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue","mtime":1604956930034},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKaW1wb3J0IEF4aXMgZnJvbSAiLi4vY29tcG9uZW50cy9BeGlzLnZ1ZSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAidnVlLWxpbmUtY2hhcnQiLAogICAgY29tcG9uZW50czogewogICAgICAgIGF4aXM6IEF4aXMgLy8gVXNpbmcgcmV1c2FibGUgY29tcG9uZW50IHRvIGRyYXcgeCx5IGF4aXMgYW5kIEdyaWQuCiAgICB9LAogICAgcHJvcHM6IFsndGl0bGUnLCAnZGF0YSddLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgIGxvYWRpbmc6IHRydWUsCiAgICAgICAgY2hhcnREZWZhdWx0czogewogICAgICAgICAgICB3aWR0aDogMzUwLAogICAgICAgICAgICBoZWlnaHQ6IDE1MCwKICAgICAgICAgICAgY2hhcnRJZDogImxpbmVjaGFydC12dWUiLAogICAgICAgICAgICBtYXJnaW46IHsKICAgICAgICAgICAgICAgIHRvcDogNSwKICAgICAgICAgICAgICAgIHJpZ2h0OiA1LAogICAgICAgICAgICAgICAgYm90dG9tOiAzMCwKICAgICAgICAgICAgICAgIGxlZnQ6IDUwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGdyaWRPcGFjaXR5OiAxLAogICAgICAgICAgICBkYXRhOiBbXQogICAgICAgIH0sCiAgICAgICAgbGluZTogIiIsCiAgICAgICAgLy9UcmFuc2xhdGUgY28tb3JkcyBmb3IgY2hhcnQsIHggYXhpcyBhbmQgeWF4aXMuIFRoaXMgaXMgaW5qZWN0ZWQgaW50byB0ZW1wbGF0ZQogICAgICAgIHRyYW5zbGF0ZTogInRyYW5zbGF0ZSgiICsgNDAgKyAiLCIgKyA1ICsgIikiLAogICAgICAgIHRybnNZOiAidHJhbnNsYXRlKDAsMCkiLAogICAgICAgIHRybnNYOiB0aGlzLmdldFRybnN4LAogICAgICAgIHRvZ2dsZUNsYXNzOiB0cnVlCiAgICAgICAgfTsKICAgIH0sIAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmNhbGN1bGF0ZVBhdGgoKTsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBnZXRTY2FsZXMoKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJEcmF3aW5nIHNjYWxlcy4uLiIpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YVswXS5kYXRlKQogICAgICAgICAgICAvLyBBbGwgdGhlIG1hdGhzIHRvIHdvcmsgY2hhcnQgY28gb3JkaW5hdGVzIGFuZCB3b3Jpbmcgb3V0IEF4aXMKCiAgICAgICAgICAgIGNvbnN0IHlfZXh0ZW50ID0gZDMuZXh0ZW50KHRoaXMuZGF0YSwgZCA9PiBkLnZhbHVlKTsKCiAgICAgICAgICAgIGNvbnN0IHggPSBkMwogICAgICAgICAgICAgICAgLnNjYWxlVGltZSgpCiAgICAgICAgICAgICAgICAuZG9tYWluKAogICAgICAgICAgICAgICAgICAgIGQzLmV4dGVudCh0aGlzLmRhdGEsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQuZGF0ZTsKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgLnJhbmdlUm91bmQoWzAsIHRoaXMuY2hhcnREZWZhdWx0cy53aWR0aCAtIHRoaXMuY2hhcnREZWZhdWx0cy53aWR0aCAqIDAuMDVdKTsKICAgICAgICAgICAgY29uc3QgeSA9IGQzCiAgICAgICAgICAgICAgICAuc2NhbGVMaW5lYXIoKQogICAgICAgICAgICAgICAgLmRvbWFpbihbeV9leHRlbnRbMF0gLSAoeV9leHRlbnRbMV0teV9leHRlbnRbMF0pKjAuMiwgeV9leHRlbnRbMV0gKyAoeV9leHRlbnRbMV0teV9leHRlbnRbMF0pKjAuMl0pCiAgICAgICAgICAgICAgICAucmFuZ2UoW3RoaXMuY2hhcnREZWZhdWx0cy5oZWlnaHQsIDBdKTsKCiAgICAgICAgICAgIGQzLmF4aXNCb3R0b20oKS5zY2FsZSh4KTsKICAgICAgICAgICAgZDMuYXhpc0xlZnQoKS5zY2FsZSh5KTsKCiAgICAgICAgICAgIC8vS2V5IGZ1bnRpb25zIHRvIGRyYXcgWC1heGlzLFlBeGlzIGFuZCB0aGUgZ3JpZC4gQWxsIHVzZXMgY29tcG9uZW50IGF4aXMKICAgICAgICAgICAgLy9wbGF5IGFyb3VuZCB3aXRoIHRpbWUgZm9ybWF0IHRvIGdldCBpdCB0byBkaXNwbGF5IGFzIHlvdSB3YW50IDogZDMudGltZUZvcm1hdCgiJWItJWQiKQogICAgICAgICAgICB2YXIgeEF4aXMgPSBkMwogICAgICAgICAgICAgICAgLmF4aXNCb3R0b20oKQogICAgICAgICAgICAgICAgLnNjYWxlKHgpCiAgICAgICAgICAgICAgICAudGlja3MoZDMudGltZU1vbnRoLmV2ZXJ5KDIpKQogICAgICAgICAgICAgICAgLnRpY2tGb3JtYXQoZDMudGltZUZvcm1hdCgnJWItJXknKSk7CgogICAgICAgICAgICB2YXIgeUF4aXMgPSBkMwogICAgICAgICAgICAgICAgLmF4aXNMZWZ0KCkKICAgICAgICAgICAgICAgIC5zY2FsZSh5KQogICAgICAgICAgICAgICAgLnRpY2tzKDUpOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHZhciB5R3JpZCA9IGQzCiAgICAgICAgICAgICAgICAuYXhpc0xlZnQoKQogICAgICAgICAgICAgICAgLnNjYWxlKHkpCiAgICAgICAgICAgICAgICAudGlja1NpemUoLSh0aGlzLmNoYXJ0RGVmYXVsdHMud2lkdGggLSAxMDApLCAwLCAwKQogICAgICAgICAgICAgICAgLnRpY2tGb3JtYXQoIiIpOwoKICAgICAgICAgICAgLy8gUmV0dXJuIHRoZSBrZXkgY2FsY3VsYXRpb25zIGFuZCBmdW5jdGlvbnMgdG8gZHJhdyB0aGUgY2hhcnQKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIHgsCiAgICAgICAgICAgICAgICB5LAogICAgICAgICAgICAgICAgeEF4aXMsCiAgICAgICAgICAgICAgICB5QXhpcywKICAgICAgICAgICAgICAgIHlHcmlkCiAgICAgICAgICAgIH07CiAgICAgICAgfSwKICAgICAgICBnZXRUcm5zeChjaGFydERlZmF1bHRzKSB7CiAgICAgICAgLy93b3JrcyBvdXQgdHJhbnNsYXRlIHZhbHVlIGluIHJlYWx0aXZlIHRvIGR5bmFtaWMgaGVpZ2h0CiAgICAgICAgY29uc3QgdCA9ICJ0cmFuc2xhdGUoMCwiICsgdGhpcy5jaGFydERlZmF1bHRzLmhlaWdodCArICIpIjsKICAgICAgICByZXR1cm4gdDsKICAgICAgICB9LAogICAgICAgIGNhbGN1bGF0ZVBhdGgoKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJEcmF3aW5nIHBhdGgiKQogICAgICAgICAgICAvL0dldCBrZXkgY2FsY3VsYXRpb24gZnVudGlvbnMgdG8gZHJhdyBjaGFydCAsIEllIHNjYWxlLCBheGlzIG1hcHBpbmcgYW5kIHBsb3R0aW5nCiAgICAgICAgICAgIGNvbnN0IHNjYWxlID0gdGhpcy5nZXRTY2FsZXMoKTsKICAgICAgICAgICAgLy8gRGVmaW5lIGNhbGN1bHRpb24gdG8gZHJhdyBjaGFydAogICAgICAgICAgICBjb25zdCBwYXRoID0gZDMKICAgICAgICAgICAgICAgIC5saW5lKCkKICAgICAgICAgICAgICAgIC54KGQgPT4gewogICAgICAgICAgICAgICAgICAgIHJldHVybiBzY2FsZS54KGQuZGF0ZSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLnkoZCA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNjYWxlLnkoZC52YWx1ZSk7CiAgICAgICAgICAgICAgICB9KQoKICAgICAgICAgICAgLy8gZHJhdyBsaW5lIHRoZW4gdGhpcy5saW5lIGlzIGluamVjdGVkIGludG8gdGhlIHRlbXBsYXRlCiAgICAgICAgICAgIHRoaXMubGluZSA9IHBhdGgodGhpcy5kYXRhKTsKICAgICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"LineChart.vue","sourceRoot":"components","sourcesContent":["<!-- \nGood example here bar chart ---[ https://stackoverflow.com/questions/48726636/draw-d3-axis-without-direct-dom-manipulation \n-->\n\n<template>\n    <div v-if=\"!loading\">\n        <h1>{{title}}</h1>\n\n        <svg :width=\"chartDefaults.width + chartDefaults.margin.left + chartDefaults.margin.right\" :height=\"chartDefaults.height + chartDefaults.margin.top + chartDefaults.margin.bottom\">\n            \n            <g class='lineChart' v-bind:transform=\"translate\">\n            <axis class='yA' v-bind:scales=\"getScales().yAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY'/>\n            <axis class='xA' v-bind:scales=\"getScales().xAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsX()'/>\n            <axis class='grid' v-bind:scales=\"getScales().yGrid\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY' v-bind:style=\"{opacity: chartDefaults.gridOpacity}\"/>\n            <path class='line' :d=\"line\"/>\n            </g>\n            \n        </svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Axis from \"../components/Axis.vue\";\nimport axios from 'axios';\n\nexport default {\n    name: \"vue-line-chart\",\n    components: {\n        axis: Axis // Using reusable component to draw x,y axis and Grid.\n    },\n    props: ['title', 'data'],\n    data() {\n        return {\n        loading: true,\n        chartDefaults: {\n            width: 350,\n            height: 150,\n            chartId: \"linechart-vue\",\n            margin: {\n                top: 5,\n                right: 5,\n                bottom: 30,\n                left: 50\n            },\n            gridOpacity: 1,\n            data: []\n        },\n        line: \"\",\n        //Translate co-ords for chart, x axis and yaxis. This is injected into template\n        translate: \"translate(\" + 40 + \",\" + 5 + \")\",\n        trnsY: \"translate(0,0)\",\n        trnsX: this.getTrnsx,\n        toggleClass: true\n        };\n    }, \n    created() {\n        this.calculatePath();\n        this.loading = false\n    },\n    methods: {\n        getScales() {\n            console.log(\"Drawing scales...\")\n            console.log(this.data[0].date)\n            // All the maths to work chart co ordinates and woring out Axis\n\n            const y_extent = d3.extent(this.data, d => d.value);\n\n            const x = d3\n                .scaleTime()\n                .domain(\n                    d3.extent(this.data, function(d) {\n                        return d.date;\n                    })\n                )\n                .rangeRound([0, this.chartDefaults.width - this.chartDefaults.width * 0.05]);\n            const y = d3\n                .scaleLinear()\n                .domain([y_extent[0] - (y_extent[1]-y_extent[0])*0.2, y_extent[1] + (y_extent[1]-y_extent[0])*0.2])\n                .range([this.chartDefaults.height, 0]);\n\n            d3.axisBottom().scale(x);\n            d3.axisLeft().scale(y);\n\n            //Key funtions to draw X-axis,YAxis and the grid. All uses component axis\n            //play around with time format to get it to display as you want : d3.timeFormat(\"%b-%d\")\n            var xAxis = d3\n                .axisBottom()\n                .scale(x)\n                .ticks(d3.timeMonth.every(2))\n                .tickFormat(d3.timeFormat('%b-%y'));\n\n            var yAxis = d3\n                .axisLeft()\n                .scale(y)\n                .ticks(5);\n                \n            var yGrid = d3\n                .axisLeft()\n                .scale(y)\n                .tickSize(-(this.chartDefaults.width - 100), 0, 0)\n                .tickFormat(\"\");\n\n            // Return the key calculations and functions to draw the chart\n            return {\n                x,\n                y,\n                xAxis,\n                yAxis,\n                yGrid\n            };\n        },\n        getTrnsx(chartDefaults) {\n        //works out translate value in realtive to dynamic height\n        const t = \"translate(0,\" + this.chartDefaults.height + \")\";\n        return t;\n        },\n        calculatePath() {\n            console.log(\"Drawing path\")\n            //Get key calculation funtions to draw chart , Ie scale, axis mapping and plotting\n            const scale = this.getScales();\n            // Define calcultion to draw chart\n            const path = d3\n                .line()\n                .x(d => {\n                    return scale.x(d.date);\n                })\n                .y(d => {\n                    return scale.y(d.value);\n                })\n\n            // draw line then this.line is injected into the template\n            this.line = path(this.data);\n        }\n    }\n};\n</script>\n<!-- css loaderhttps://vue-loader.vuejs.org/guide/scoped-css.html#mixing-local-and-global-styles -->\n<style>\nh1 {\n    color: #3e5676;\n    font-family: Roboto;\n    font-size: 14px;\n    text-align: left;\n    margin-left: 10px;\n}\n\npath.line {\n  fill: none;\n  stroke: #4395c8;\n  stroke-width: 1px;\n}\n\n.grid line {\n  opacity: 0.05;\n}\n.xA line {\n  opacity: 0.5;\n}\n\n/*Some fancy animation to draw chart*/\n/* svg .lineChart > path {\n  stroke: #ecbc3a;\n  stroke-width: 3;\n  stroke-dasharray: 4813.713;\n  stroke-dashoffset: 4813.713;\n}\n\n.ani2 svg .lineChart > path {\n  stroke: #ecbc3a;\n}\n.ani1 svg .lineChart > path {\n  stroke: #ecbc3a;\n} */\n\n#Layer_1 {\n  width: 100%;\n}\n\n.text {\n  display: inline-block;\n  font-size: 3vw;\n  margin: 0.5vw 0 1.5vw;\n}\n\nsvg {\n  background-color: #f2f2f2;\n}\n</style>\n"]}]}