{"remainingRequest":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/babel-loader/lib/index.js!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue","mtime":1610142088059},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgKiBhcyBkMyBmcm9tICJkMyI7CmltcG9ydCBBeGlzIGZyb20gIi4uL2NvbXBvbmVudHMvQXhpcy52dWUiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyByb3VuZCB9IGZyb20gJ21hdGhqcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAidnVlLWxpbmUtY2hhcnQiLAogIGNvbXBvbmVudHM6IHsKICAgIGF4aXM6IEF4aXMgLy8gVXNpbmcgcmV1c2FibGUgY29tcG9uZW50IHRvIGRyYXcgeCx5IGF4aXMgYW5kIEdyaWQuCgogIH0sCiAgcHJvcHM6IFsndGl0bGUnLCAnZGF0YScsICdjYXRlZ29yeScsICdiYWNrZ3JvdW5kJywgJ2hpZ2hsaWdodCcsICdtb250aF90aWNrX2ludGVydmFsJywgJ3Nob3dfcGN0JywgJ3Nob3J0X2NhdGVnb3J5J10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IHRydWUsCiAgICAgIGNoYXJ0RGVmYXVsdHM6IHsKICAgICAgICB3aWR0aDogMTYwLAogICAgICAgIGhlaWdodDogMTAwLAogICAgICAgIGNoYXJ0SWQ6ICJsaW5lY2hhcnQtdnVlIiwKICAgICAgICBtYXJnaW46IHsKICAgICAgICAgIHRvcDogNSwKICAgICAgICAgIHJpZ2h0OiAwLAogICAgICAgICAgYm90dG9tOiAzMCwKICAgICAgICAgIGxlZnQ6IDUwCiAgICAgICAgfSwKICAgICAgICBncmlkT3BhY2l0eTogMSwKICAgICAgICBkYXRhOiBbXQogICAgICB9LAogICAgICBsaW5lOiAiIiwKICAgICAgLy9UcmFuc2xhdGUgY28tb3JkcyBmb3IgY2hhcnQsIHggYXhpcyBhbmQgeWF4aXMuIFRoaXMgaXMgaW5qZWN0ZWQgaW50byB0ZW1wbGF0ZQogICAgICB0cmFuc2xhdGU6ICJ0cmFuc2xhdGUoIiArIDM1ICsgIiwiICsgNSArICIpIiwKICAgICAgdHJuc1k6ICJ0cmFuc2xhdGUoMCwwKSIsCiAgICAgIHRybnNYOiB0aGlzLmdldFRybnN4LAogICAgICB0b2dnbGVDbGFzczogdHJ1ZQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNhbGN1bGF0ZVBhdGgoKTsKICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U2hvcnRlbmRlZENhdGVnb3J5OiBmdW5jdGlvbiBnZXRTaG9ydGVuZGVkQ2F0ZWdvcnkoY2F0KSB7CiAgICAgIGlmICh0aGlzLnNob3J0X2NhdGVnb3J5KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc2hvcnRfY2F0ZWdvcnlbY2F0XTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gY2F0OwogICAgICB9CiAgICB9LAogICAgZ2V0QXR0cmlidXRpb25Db2xvcjogZnVuY3Rpb24gZ2V0QXR0cmlidXRpb25Db2xvcihyX3Vuc2NhbGVkKSB7CiAgICAgIGlmIChyX3Vuc2NhbGVkID49IDApIHsKICAgICAgICByZXR1cm4gJyM4NkFEM0InOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAnI0FEM0IzQic7CiAgICAgIH0KICAgIH0sCiAgICByb3VuZERhdGE6IGZ1bmN0aW9uIHJvdW5kRGF0YShkLCBkaWdpdHMpIHsKICAgICAgcmV0dXJuIHJvdW5kKGQsIGRpZ2l0cyk7CiAgICB9LAogICAgZ2V0UGN0Q2hhbmdlOiBmdW5jdGlvbiBnZXRQY3RDaGFuZ2UoKSB7CiAgICAgIHZhciBsYXN0ID0gdGhpcy5kYXRhW3RoaXMuZGF0YS5sZW5ndGggLSAxXS52YWx1ZTsKICAgICAgdmFyIGZpcnN0ID0gdGhpcy5kYXRhWzBdLnZhbHVlOwogICAgICB2YXIgcGN0ID0gKGxhc3QgLyBmaXJzdCAtIDEpICogMTAwOwogICAgICByZXR1cm4gdGhpcy5yb3VuZERhdGEocGN0LCAyKTsKICAgIH0sCiAgICBnZXRTY2FsZXM6IGZ1bmN0aW9uIGdldFNjYWxlcygpIHsKICAgICAgY29uc29sZS5sb2coIkRyYXdpbmcgc2NhbGVzLi4uIik7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YVswXS5kYXRlKTsgLy8gQWxsIHRoZSBtYXRocyB0byB3b3JrIGNoYXJ0IGNvIG9yZGluYXRlcyBhbmQgd29yaW5nIG91dCBBeGlzCgogICAgICB2YXIgeV9leHRlbnQgPSBkMy5leHRlbnQodGhpcy5kYXRhLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnZhbHVlOwogICAgICB9KTsKICAgICAgdmFyIHggPSBkMy5zY2FsZVRpbWUoKS5kb21haW4oZDMuZXh0ZW50KHRoaXMuZGF0YSwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5kYXRlOwogICAgICB9KSkucmFuZ2VSb3VuZChbMCwgdGhpcy5jaGFydERlZmF1bHRzLndpZHRoIC0gdGhpcy5jaGFydERlZmF1bHRzLndpZHRoICogMF0pOwogICAgICB2YXIgeSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFt5X2V4dGVudFswXSAtICh5X2V4dGVudFsxXSAtIHlfZXh0ZW50WzBdKSAqIDAuMiwgeV9leHRlbnRbMV0gKyAoeV9leHRlbnRbMV0gLSB5X2V4dGVudFswXSkgKiAwLjJdKS5yYW5nZShbdGhpcy5jaGFydERlZmF1bHRzLmhlaWdodCwgMF0pOwogICAgICBkMy5heGlzQm90dG9tKCkuc2NhbGUoeCk7CiAgICAgIGQzLmF4aXNMZWZ0KCkuc2NhbGUoeSk7IC8vS2V5IGZ1bnRpb25zIHRvIGRyYXcgWC1heGlzLFlBeGlzIGFuZCB0aGUgZ3JpZC4gQWxsIHVzZXMgY29tcG9uZW50IGF4aXMKICAgICAgLy9wbGF5IGFyb3VuZCB3aXRoIHRpbWUgZm9ybWF0IHRvIGdldCBpdCB0byBkaXNwbGF5IGFzIHlvdSB3YW50IDogZDMudGltZUZvcm1hdCgiJWItJWQiKQoKICAgICAgdmFyIHhBeGlzID0gZDMuYXhpc0JvdHRvbSgpLnNjYWxlKHgpLnRpY2tzKGQzLnRpbWVNb250aC5ldmVyeSh0aGlzLm1vbnRoX3RpY2tfaW50ZXJ2YWwpKS50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoJyViLSV5JykpOwogICAgICB2YXIgeUF4aXMgPSBkMy5heGlzTGVmdCgpLnNjYWxlKHkpLnRpY2tzKDUpOwogICAgICB2YXIgeUdyaWQgPSBkMy5heGlzTGVmdCgpLnNjYWxlKHkpLnRpY2tTaXplKC0odGhpcy5jaGFydERlZmF1bHRzLndpZHRoIC0gMTAwKSwgMCwgMCkudGlja0Zvcm1hdCgiIik7IC8vIFJldHVybiB0aGUga2V5IGNhbGN1bGF0aW9ucyBhbmQgZnVuY3Rpb25zIHRvIGRyYXcgdGhlIGNoYXJ0CgogICAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeSwKICAgICAgICB4QXhpczogeEF4aXMsCiAgICAgICAgeUF4aXM6IHlBeGlzLAogICAgICAgIHlHcmlkOiB5R3JpZAogICAgICB9OwogICAgfSwKICAgIGdldFRybnN4OiBmdW5jdGlvbiBnZXRUcm5zeChjaGFydERlZmF1bHRzKSB7CiAgICAgIC8vd29ya3Mgb3V0IHRyYW5zbGF0ZSB2YWx1ZSBpbiByZWFsdGl2ZSB0byBkeW5hbWljIGhlaWdodAogICAgICB2YXIgdCA9ICJ0cmFuc2xhdGUoMCwiICsgdGhpcy5jaGFydERlZmF1bHRzLmhlaWdodCArICIpIjsKICAgICAgcmV0dXJuIHQ7CiAgICB9LAogICAgY2FsY3VsYXRlUGF0aDogZnVuY3Rpb24gY2FsY3VsYXRlUGF0aCgpIHsKICAgICAgY29uc29sZS5sb2coIkRyYXdpbmcgcGF0aCIpOyAvL0dldCBrZXkgY2FsY3VsYXRpb24gZnVudGlvbnMgdG8gZHJhdyBjaGFydCAsIEllIHNjYWxlLCBheGlzIG1hcHBpbmcgYW5kIHBsb3R0aW5nCgogICAgICB2YXIgc2NhbGUgPSB0aGlzLmdldFNjYWxlcygpOyAvLyBEZWZpbmUgY2FsY3VsdGlvbiB0byBkcmF3IGNoYXJ0CgogICAgICB2YXIgcGF0aCA9IGQzLmxpbmUoKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHNjYWxlLngoZC5kYXRlKTsKICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBzY2FsZS55KGQudmFsdWUpOwogICAgICB9KTsgLy8gZHJhdyBsaW5lIHRoZW4gdGhpcy5saW5lIGlzIGluamVjdGVkIGludG8gdGhlIHRlbXBsYXRlCgogICAgICB0aGlzLmxpbmUgPSBwYXRoKHRoaXMuZGF0YSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- \nGood example here bar chart ---[ https://stackoverflow.com/questions/48726636/draw-d3-axis-without-direct-dom-manipulation \n-->\n\n<template>\n    <div v-if=\"!loading\">\n        <h1><span v-bind:style={color:highlight[category]}>{{getShortendedCategory(category)}}</span>{{title}} <span class='float-right' v-if=\"show_pct\" :style=\"{color: getAttributionColor(getPctChange())}\">[{{getPctChange()}} %]</span></h1>\n        <svg :width=\"chartDefaults.width + chartDefaults.margin.left + chartDefaults.margin.right\" :height=\"chartDefaults.height + chartDefaults.margin.top + chartDefaults.margin.bottom\" v-bind:style=\"{\n            'background-image': 'linear-gradient(' + background[category] + '00,' + background[category] + ')'\n            }\">\n\n            <g class='lineChart' v-bind:transform=\"translate\">\n            \n            <axis class='yA' v-bind:scales=\"getScales().yAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY'/>\n            \n            <axis class='xA' v-bind:scales=\"getScales().xAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsX()'/>\n            \n            <!-- <axis class='grid' v-bind:scales=\"getScales().yGrid\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY' v-bind:style=\"{opacity: chartDefaults.gridOpacity}\"/> -->\n            \n            <path class='line' :d=\"line\"/>\n            <circle \n            :cx=\"getScales().x(data[this.data.length - 1].date)\" \n            :cy='getScales().y(data[this.data.length - 1].value)' \n            r='3' fill='#fff'>\n                  \n            </circle>\n            <text \n            :x=\"getScales().x(data[this.data.length - 1].date)\" \n            :y=\"getScales().y(data[this.data.length - 1].value)\"\n            :fill='highlight[category]'\n            dx=\"-10\"\n            dy='-10'\n            style='font-size: 10px;'\n            >{{roundData(data[this.data.length - 1].value,2)}}</text>  \n            \n            </g>\n            \n        </svg>\n        \n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Axis from \"../components/Axis.vue\";\nimport axios from 'axios';\nimport {round} from 'mathjs';\n\nexport default {\n    name: \"vue-line-chart\",\n    components: {\n        axis: Axis // Using reusable component to draw x,y axis and Grid.\n    },\n    props: ['title', 'data','category', 'background','highlight','month_tick_interval', 'show_pct','short_category'],\n    data() {\n        return {\n        loading: true,\n        chartDefaults: {\n            width: 160,\n            height: 100,\n            chartId: \"linechart-vue\",\n            margin: {\n                top: 5,\n                right: 0,\n                bottom: 30,\n                left: 50\n            },\n            gridOpacity: 1,\n            data: []\n        },\n        line: \"\",\n        //Translate co-ords for chart, x axis and yaxis. This is injected into template\n        translate: \"translate(\" + 35 + \",\" + 5 + \")\",\n        trnsY: \"translate(0,0)\",\n        trnsX: this.getTrnsx,\n        toggleClass: true\n        };\n    }, \n    created() {\n        this.calculatePath();\n        this.loading = false\n    },\n    methods: {\n        getShortendedCategory: function(cat) { \n            if(this.short_category) {\n                return this.short_category[cat]\n            } else {\n                return cat\n            }\n            \n        },\n        getAttributionColor: function(r_unscaled) {\n            if(r_unscaled >= 0) {\n                return '#86AD3B'\n            } else {\n                return '#AD3B3B'\n            }\n        },\n        roundData(d, digits) {\n            return round(d, digits)\n        },\n        getPctChange() {\n            let last = this.data[this.data.length - 1].value\n            let first = this.data[0].value\n            let pct = (( last / first) - 1) * 100\n            return this.roundData(pct, 2)\n        },\n        getScales() {\n            console.log(\"Drawing scales...\")\n            console.log(this.data[0].date)\n            // All the maths to work chart co ordinates and woring out Axis\n\n            const y_extent = d3.extent(this.data, d => d.value);\n\n            const x = d3\n                .scaleTime()\n                .domain(\n                    d3.extent(this.data, function(d) {\n                        return d.date;\n                    })\n                )\n                .rangeRound([0, this.chartDefaults.width - this.chartDefaults.width * 0]);\n            const y = d3\n                .scaleLinear()\n                .domain([y_extent[0] - (y_extent[1]-y_extent[0])*0.2, y_extent[1] + (y_extent[1]-y_extent[0])*0.2])\n                .range([this.chartDefaults.height, 0]);\n\n            d3.axisBottom().scale(x);\n            d3.axisLeft().scale(y);\n\n            //Key funtions to draw X-axis,YAxis and the grid. All uses component axis\n            //play around with time format to get it to display as you want : d3.timeFormat(\"%b-%d\")\n            var xAxis = d3\n                .axisBottom()\n                .scale(x)\n                .ticks(d3.timeMonth.every(this.month_tick_interval))\n                .tickFormat(d3.timeFormat('%b-%y'));\n\n            var yAxis = d3\n                .axisLeft()\n                .scale(y)\n                .ticks(5);\n                \n            var yGrid = d3\n                .axisLeft()\n                .scale(y)\n                .tickSize(-(this.chartDefaults.width - 100), 0, 0)\n                .tickFormat(\"\");\n\n            // Return the key calculations and functions to draw the chart\n            return {\n                x,\n                y,\n                xAxis,\n                yAxis,\n                yGrid\n            };\n        },\n        getTrnsx(chartDefaults) {\n        //works out translate value in realtive to dynamic height\n        const t = \"translate(0,\" + this.chartDefaults.height + \")\";\n        return t;\n        },\n        calculatePath() {\n            console.log(\"Drawing path\")\n            //Get key calculation funtions to draw chart , Ie scale, axis mapping and plotting\n            const scale = this.getScales();\n            // Define calcultion to draw chart\n            const path = d3\n                .line()\n                .x(d => {\n                    return scale.x(d.date);\n                })\n                .y(d => {\n                    return scale.y(d.value);\n                })\n\n            // draw line then this.line is injected into the template\n            this.line = path(this.data);\n        }\n    }\n};\n</script>\n<!-- css loaderhttps://vue-loader.vuejs.org/guide/scoped-css.html#mixing-local-and-global-styles -->\n<style>\nh1 {\n    color: white;\n    font-family: Roboto;\n    font-size: 10px;\n    text-align: left;\n    padding-left: 10px;\n    padding-bottom: 5px;\n    padding-top: 5px;\n    margin-top:0px;\n    background: #b23d3d30;\n}\n\nh1 span {\n    margin-right: 10px;\n}\n\npath.line {\n  fill: none;\n  stroke: white;\n  stroke-width: 1px;\n}\n\n.grid line {\n  opacity: 0.05;\n  color:white;\n}\n.xA line {\n  opacity: 0.5;\n}\n\n.xA {\n    color:white;\n}\n\n.yA {\n    color:white;\n}\n\n/*Some fancy animation to draw chart*/\n/* svg .lineChart > path {\n  stroke: #ecbc3a;\n  stroke-width: 3;\n  stroke-dasharray: 4813.713;\n  stroke-dashoffset: 4813.713;\n}\n\n.ani2 svg .lineChart > path {\n  stroke: #ecbc3a;\n}\n.ani1 svg .lineChart > path {\n  stroke: #ecbc3a;\n} */\n\n#Layer_1 {\n  width: 100%;\n}\n\n.text {\n  display: inline-block;\n  font-size: 3vw;\n  margin: 0.5vw 0 1.5vw;\n}\n\nsvg {\n  border-bottom: 1px solid rgba(256,256,256,0.1);\n  margin-bottom: 0;\n}\n\n.float-right {\n    float: right;\n}\n</style>\n"],"sourceRoot":"src/components"}]}