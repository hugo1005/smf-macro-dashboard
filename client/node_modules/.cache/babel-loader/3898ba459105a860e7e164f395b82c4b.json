{"remainingRequest":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/babel-loader/lib/index.js!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue","mtime":1604946246621},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwppbXBvcnQgQXhpcyBmcm9tICIuLi9jb21wb25lbnRzL0F4aXMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInZ1ZS1saW5lLWNoYXJ0IiwKICBjb21wb25lbnRzOiB7CiAgICBheGlzOiBBeGlzIC8vIFVzaW5nIHJldXNhYmxlIGNvbXBvbmVudCB0byBkcmF3IHgseSBheGlzIGFuZCBHcmlkLgoKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBbXSwKICAgICAgY2hhcnREZWZhdWx0czogewogICAgICAgIHdpZHRoOiA4MDAsCiAgICAgICAgaGVpZ2h0OiAzMDAsCiAgICAgICAgY2hhcnRJZDogImxpbmVjaGFydC12dWUiLAogICAgICAgIHRpdGxlOiAiVUsgUmFpbmZhbGwgZm9yIDIwMTgiLAogICAgICAgIG1hcmdpbjogewogICAgICAgICAgdG9wOiA1LAogICAgICAgICAgcmlnaHQ6IDUsCiAgICAgICAgICBib3R0b206IDE1LAogICAgICAgICAgbGVmdDogNTAKICAgICAgICB9LAogICAgICAgIGdyaWRPcGFjaXR5OiAxLAogICAgICAgIGRhdGE6IFtdCiAgICAgIH0sCiAgICAgIGxpbmU6ICIiLAogICAgICAvL1RyYW5zbGF0ZSBjby1vcmRzIGZvciBjaGFydCwgeCBheGlzIGFuZCB5YXhpcy4gVGhpcyBpcyBpbmplY3RlZCBpbnRvIHRlbXBsYXRlCiAgICAgIHRyYW5zbGF0ZTogInRyYW5zbGF0ZSgiICsgNTAgKyAiLCIgKyA1ICsgIikiLAogICAgICB0cm5zWTogInRyYW5zbGF0ZSgwLDApIiwKICAgICAgdHJuc1g6IHRoaXMuZ2V0VHJuc3gsCiAgICAgIHRvZ2dsZUNsYXNzOiB0cnVlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBzY2FsZSA9IHt9OyAvL0tpY2sgb2ZmIGRyYXdpbmcgY2hhcnQgb25jZSBjb21wb25lbnQgaXMgbW91bnRlZAoKICAgIHRoaXMuY2FsY3VsYXRlUGF0aCgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VGVzdERhdGE6IGZ1bmN0aW9uIGdldFRlc3REYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2NoYXJ0X3Rlc3QnOwogICAgICBheGlvcy5nZXQocGF0aCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMuZGF0YSA9IHJlcy5kYXRhOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0U2NhbGVzOiBmdW5jdGlvbiBnZXRTY2FsZXMoKSB7CiAgICAgIC8vIEFsbCB0aGUgbWF0aHMgdG8gd29yayBjaGFydCBjbyBvcmRpbmF0ZXMgYW5kIHdvcmluZyBvdXQgQXhpcwogICAgICB2YXIgcGFyc2VEYXRlID0gZDMudGltZVBhcnNlKCIlbS0lZC0lWSIpOwogICAgICB0aGlzLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZCkgewogICAgICAgIGQuZGF0ZSA9IHBhcnNlRGF0ZShkLmRheSk7CiAgICAgIH0pOwogICAgICB2YXIgeCA9IGQzLnNjYWxlVGltZSgpLmRvbWFpbihkMy5leHRlbnQodGhpcy5kYXRhLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmRhdGU7CiAgICAgIH0pKS5yYW5nZVJvdW5kKFswLCB0aGlzLmNoYXJ0RGVmYXVsdHMud2lkdGggLSAxMDBdKTsKICAgICAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgZDMubWF4KHRoaXMuZGF0YSwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5jb3VudCArIDEwMDsKICAgICAgfSldKS5yYW5nZShbdGhpcy5jaGFydERlZmF1bHRzLmhlaWdodCwgMF0pOwogICAgICBkMy5heGlzQm90dG9tKCkuc2NhbGUoeCk7CiAgICAgIGQzLmF4aXNMZWZ0KCkuc2NhbGUoeSk7IC8vS2V5IGZ1bnRpb25zIHRvIGRyYXcgWC1heGlzLFlBeGlzIGFuZCB0aGUgZ3JpZC4gQWxsIHVzZXMgY29tcG9uZW50IGF4aXMKICAgICAgLy9wbGF5IGFyb3VuZCB3aXRoIHRpbWUgZm9ybWF0IHRvIGdldCBpdCB0byBkaXNwbGF5IGFzIHlvdSB3YW50IDogZDMudGltZUZvcm1hdCgiJWItJWQiKQoKICAgICAgdmFyIHhBeGlzID0gZDMuYXhpc0JvdHRvbSgpLnNjYWxlKHgpLnRpY2tGb3JtYXQoZDMudGltZUZvcm1hdCgiJWIiKSkudGlja1ZhbHVlcyh0aGlzLmRhdGEubWFwKGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgaWYgKGkgPiAwKSB7CiAgICAgICAgICByZXR1cm4gZC5kYXRlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9KS5zcGxpY2UoMSkpLnRpY2tzKDQpOwogICAgICB2YXIgeUF4aXMgPSBkMy5heGlzTGVmdCgpLnNjYWxlKHkpLnRpY2tzKDUpOwogICAgICB2YXIgeUdyaWQgPSBkMy5heGlzTGVmdCgpLnNjYWxlKHkpLnRpY2tTaXplKC0odGhpcy5jaGFydERlZmF1bHRzLndpZHRoIC0gMTAwKSwgMCwgMCkudGlja0Zvcm1hdCgiIik7IC8vIFJldHVybiB0aGUga2V5IGNhbGN1bGF0aW9ucyBhbmQgZnVuY3Rpb25zIHRvIGRyYXcgdGhlIGNoYXJ0CgogICAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeSwKICAgICAgICB4QXhpczogeEF4aXMsCiAgICAgICAgeUF4aXM6IHlBeGlzLAogICAgICAgIHlHcmlkOiB5R3JpZAogICAgICB9OwogICAgfSwKICAgIGdldFRybnN4OiBmdW5jdGlvbiBnZXRUcm5zeChjaGFydERlZmF1bHRzKSB7CiAgICAgIC8vd29ya3Mgb3V0IHRyYW5zbGF0ZSB2YWx1ZSBpbiByZWFsdGl2ZSB0byBkeW5hbWljIGhlaWdodAogICAgICB2YXIgdCA9ICJ0cmFuc2xhdGUoMCwiICsgdGhpcy5jaGFydERlZmF1bHRzLmhlaWdodCArICIpIjsKICAgICAgcmV0dXJuIHQ7CiAgICB9LAogICAgY2FsY3VsYXRlUGF0aDogZnVuY3Rpb24gY2FsY3VsYXRlUGF0aCgpIHsKICAgICAgLy9HZXQga2V5IGNhbGN1bGF0aW9uIGZ1bnRpb25zIHRvIGRyYXcgY2hhcnQgLCBJZSBzY2FsZSwgYXhpcyBtYXBwaW5nIGFuZCBwbG90dGluZwogICAgICB2YXIgc2NhbGUgPSB0aGlzLmdldFNjYWxlcygpOyAvLyBEZWZpbmUgY2FsY3VsdGlvbiB0byBkcmF3IGNoYXJ0CgogICAgICB2YXIgcGF0aCA9IGQzLmxpbmUoKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHNjYWxlLngoZC5kYXRlKTsKICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBzY2FsZS55KGQuY291bnQpOwogICAgICB9KS5jdXJ2ZShkMy5jdXJ2ZUNhcmRpbmFsKTsgLy8gZHJhdyBsaW5lIHRoZW4gdGhpcy5saW5lIGlzIGluamVjdGVkIGludG8gdGhlIHRlbXBsYXRlCgogICAgICB0aGlzLmxpbmUgPSBwYXRoKHRoaXMuZGF0YSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRUZXN0RGF0YSgpOwogIH0KfTs="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,OAAA,IAAA,MAAA,oBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA,CACA;;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,MAAA,EAAA,GAFA;AAGA,QAAA,OAAA,EAAA,eAHA;AAIA,QAAA,KAAA,EAAA,sBAJA;AAKA,QAAA,MAAA,EAAA;AACA,UAAA,GAAA,EAAA,CADA;AAEA,UAAA,KAAA,EAAA,CAFA;AAGA,UAAA,MAAA,EAAA,EAHA;AAIA,UAAA,IAAA,EAAA;AAJA,SALA;AAWA,QAAA,WAAA,EAAA,CAXA;AAYA,QAAA,IAAA,EAAA;AAZA,OAFA;AAgBA,MAAA,IAAA,EAAA,EAhBA;AAiBA;AACA,MAAA,SAAA,EAAA,eAAA,EAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAlBA;AAmBA,MAAA,KAAA,EAAA,gBAnBA;AAoBA,MAAA,KAAA,EAAA,KAAA,QApBA;AAqBA,MAAA,WAAA,EAAA;AArBA,KAAA;AAuBA,GA7BA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,QAAA,KAAA,GAAA,EAAA,CADA,CAEA;;AACA,SAAA,aAAA;AACA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;;AACA,UAAA,IAAA,GAAA,kCAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AACA,OAPA;AAQA,KAXA;AAYA,IAAA,SAZA,uBAYA;AACA;AACA,UAAA,SAAA,GAAA,EAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAEA,WAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA,CAAA,IAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA;AACA,OAFA;AAIA,UAAA,CAAA,GAAA,EAAA,CACA,SADA,GAEA,MAFA,CAGA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,IAAA;AACA,OAFA,CAHA,EAOA,UAPA,CAOA,CAAA,CAAA,EAAA,KAAA,aAAA,CAAA,KAAA,GAAA,GAAA,CAPA,CAAA;AAQA,UAAA,CAAA,GAAA,EAAA,CACA,WADA,GAEA,MAFA,CAEA,CACA,CADA,EAEA,EAAA,CAAA,GAAA,CAAA,KAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,KAAA,GAAA,GAAA;AACA,OAFA,CAFA,CAFA,EAQA,KARA,CAQA,CAAA,KAAA,aAAA,CAAA,MAAA,EAAA,CAAA,CARA,CAAA;AASA,MAAA,EAAA,CAAA,UAAA,GAAA,KAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA,QAAA,GAAA,KAAA,CAAA,CAAA,EA1BA,CA4BA;AACA;;AACA,UAAA,KAAA,GAAA,EAAA,CACA,UADA,GAEA,KAFA,CAEA,CAFA,EAGA,UAHA,CAGA,EAAA,CAAA,UAAA,CAAA,IAAA,CAHA,EAIA,UAJA,CAKA,KAAA,IAAA,CACA,GADA,CACA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,YAAA,CAAA,GAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,IAAA;AACA;;AACA,eAAA,KAAA;AACA,OANA,EAOA,MAPA,CAOA,CAPA,CALA,EAcA,KAdA,CAcA,CAdA,CAAA;AAgBA,UAAA,KAAA,GAAA,EAAA,CACA,QADA,GAEA,KAFA,CAEA,CAFA,EAGA,KAHA,CAGA,CAHA,CAAA;AAIA,UAAA,KAAA,GAAA,EAAA,CACA,QADA,GAEA,KAFA,CAEA,CAFA,EAGA,QAHA,CAGA,EAAA,KAAA,aAAA,CAAA,KAAA,GAAA,GAAA,CAHA,EAGA,CAHA,EAGA,CAHA,EAIA,UAJA,CAIA,EAJA,CAAA,CAlDA,CAuDA;;AACA,aAAA;AACA,QAAA,CAAA,EAAA,CADA;AAEA,QAAA,CAAA,EAAA,CAFA;AAGA,QAAA,KAAA,EAAA,KAHA;AAIA,QAAA,KAAA,EAAA,KAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAAA;AAOA,KA3EA;AA4EA,IAAA,QA5EA,oBA4EA,aA5EA,EA4EA;AACA;AACA,UAAA,CAAA,GAAA,iBAAA,KAAA,aAAA,CAAA,MAAA,GAAA,GAAA;AACA,aAAA,CAAA;AACA,KAhFA;AAiFA,IAAA,aAjFA,2BAiFA;AACA;AACA,UAAA,KAAA,GAAA,KAAA,SAAA,EAAA,CAFA,CAGA;;AACA,UAAA,IAAA,GAAA,EAAA,CACA,IADA,GAEA,CAFA,CAEA,UAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA,OAJA,EAKA,CALA,CAKA,UAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AACA,OAPA,EAQA,KARA,CAQA,EAAA,CAAA,aARA,CAAA,CAJA,CAcA;;AACA,WAAA,IAAA,GAAA,IAAA,CAAA,KAAA,IAAA,CAAA;AACA;AAjGA,GAnCA;AAsIA,EAAA,OAtIA,qBAsIA;AACA,SAAA,WAAA;AACA;AAxIA,CAAA","sourcesContent":["<!-- \nGood example here bar chart ---[ https://stackoverflow.com/questions/48726636/draw-d3-axis-without-direct-dom-manipulation \n-->\n\n<template><div>\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 800 330\"\n  preserveAspectRatio=\"xMidYMid meet\" >\n    \n    <g class='lineChart' v-bind:transform=\"translate\">\n      <axis class='yA' v-bind:scales=\"getScales().yAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY'/>\n      <axis class='xA' v-bind:scales=\"getScales().xAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsX()'/>\n      <axis class='grid' v-bind:scales=\"getScales().yGrid\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY' v-bind:style=\"{opacity: chartDefaults.gridOpacity}\"/>\n    <path class='line' :d=\"line\" />\n    </g>\n      \n  </svg>\n\n  <p class='text' > {{chartDefaults.title}}</p>\n</div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Axis from \"../components/Axis\";\nimport axios from 'axios';\n\nexport default {\n    name: \"vue-line-chart\",\n    components: {\n        axis: Axis // Using reusable component to draw x,y axis and Grid.\n    },\n    data() {\n        return {\n        data: [],\n        chartDefaults: {\n            width: 800,\n            height: 300,\n            chartId: \"linechart-vue\",\n            title: \"UK Rainfall for 2018\",\n            margin: {\n            top: 5,\n            right: 5,\n            bottom: 15,\n            left: 50\n            },\n            gridOpacity: 1,\n            data: []\n        },\n        line: \"\",\n        //Translate co-ords for chart, x axis and yaxis. This is injected into template\n        translate: \"translate(\" + 50 + \",\" + 5 + \")\",\n        trnsY: \"translate(0,0)\",\n        trnsX: this.getTrnsx,\n        toggleClass: true\n        };\n    },\n    mounted() {\n        var scale = {};\n        //Kick off drawing chart once component is mounted\n        this.calculatePath();\n    },\n    methods: {\n        getTestData() {\n            const path = 'http://localhost:5000/chart_test';\n            axios.get(path)\n            .then((res) => {\n                this.data = res.data;\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                console.error(error);\n            });\n        },\n        getScales() {\n        // All the maths to work chart co ordinates and woring out Axis\n        var parseDate = d3.timeParse(\"%m-%d-%Y\");\n\n        this.data.forEach(function(d) {\n            d.date = parseDate(d.day);\n        });\n\n        const x = d3\n            .scaleTime()\n            .domain(\n            d3.extent(this.data, function(d) {\n                return d.date;\n            })\n            )\n            .rangeRound([0, this.chartDefaults.width - 100]);\n        const y = d3\n            .scaleLinear()\n            .domain([\n            0,\n            d3.max(this.data, function(d) {\n                return d.count + 100;\n            })\n            ])\n            .range([this.chartDefaults.height, 0]);\n        d3.axisBottom().scale(x);\n        d3.axisLeft().scale(y);\n\n        //Key funtions to draw X-axis,YAxis and the grid. All uses component axis\n        //play around with time format to get it to display as you want : d3.timeFormat(\"%b-%d\")\n        var xAxis = d3\n            .axisBottom()\n            .scale(x)\n            .tickFormat(d3.timeFormat(\"%b\"))\n            .tickValues(\n            this.data\n                .map(function(d, i) {\n                if (i > 0) {\n                    return d.date;\n                }\n                return false;\n                })\n                .splice(1)\n            )\n            .ticks(4);\n\n        var yAxis = d3\n            .axisLeft()\n            .scale(y)\n            .ticks(5);\n        var yGrid = d3\n            .axisLeft()\n            .scale(y)\n            .tickSize(-(this.chartDefaults.width - 100), 0, 0)\n            .tickFormat(\"\");\n        // Return the key calculations and functions to draw the chart\n        return {\n            x,\n            y,\n            xAxis,\n            yAxis,\n            yGrid\n        };\n        },\n        getTrnsx(chartDefaults) {\n        //works out translate value in realtive to dynamic height\n        const t = \"translate(0,\" + this.chartDefaults.height + \")\";\n        return t;\n        },\n        calculatePath() {\n        //Get key calculation funtions to draw chart , Ie scale, axis mapping and plotting\n        const scale = this.getScales();\n        // Define calcultion to draw chart\n        const path = d3\n            .line()\n            .x(d => {\n            return scale.x(d.date);\n            })\n            .y(d => {\n            return scale.y(d.count);\n            })\n            .curve(d3.curveCardinal);\n\n        // draw line then this.line is injected into the template\n        this.line = path(this.data);\n        }\n    },\n    created() {\n        this.getTestData();\n    },\n};\n</script>\n<!-- css loaderhttps://vue-loader.vuejs.org/guide/scoped-css.html#mixing-local-and-global-styles -->\n<style>\ntext {\n  color: #fff;\n}\n\npath.line {\n  fill: none;\n  stroke: #ecbc3a;\n  stroke-width: 3px;\n}\n\n.grid line {\n  opacity: 0.05;\n}\n.xA line {\n  opacity: 0.5;\n}\n\n/*Some fancy animation to draw chart*/\nsvg .lineChart > path {\n  stroke: #ecbc3a;\n  stroke-width: 3;\n  stroke-dasharray: 4813.713;\n  stroke-dashoffset: 4813.713;\n  -webkit-animation-name: draw2;\n  animation-name: draw2;\n  -webkit-animation-duration: 10s;\n  animation-duration: 10s;\n  -webkit-animation-fill-mode: forwards;\n  animation-fill-mode: forwards;\n  -webkit-animation-iteration-count: 1;\n  animation-iteration-count: 1;\n  -webkit-animation-timing-function: linear;\n  animation-timing-function: linear;\n}\n\n.ani2 svg .lineChart > path {\n  stroke: #ecbc3a;\n  -webkit-animation-name: draw-2;\n  animation-name: draw-2;\n}\n.ani1 svg .lineChart > path {\n  stroke: #ecbc3a;\n  -webkit-animation-name: draw;\n  animation-name: draw;\n}\n#Layer_1 {\n  width: 100%;\n}\n@-webkit-keyframes draw {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes draw {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n\n@-webkit-keyframes draw-2 {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n\n@keyframes draw-2 {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n.text {\n  display: inline-block;\n  font-size: 3vw;\n  margin: 0.5vw 0 1.5vw;\n}\n\nsvg {\n  background-color: #f47166;\n}\n</style>\n"],"sourceRoot":"src/components"}]}