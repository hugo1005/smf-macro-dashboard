{"remainingRequest":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue","mtime":1604946246621},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp0ZXh0IHsKICBjb2xvcjogI2ZmZjsKfQoKcGF0aC5saW5lIHsKICBmaWxsOiBub25lOwogIHN0cm9rZTogI2VjYmMzYTsKICBzdHJva2Utd2lkdGg6IDNweDsKfQoKLmdyaWQgbGluZSB7CiAgb3BhY2l0eTogMC4wNTsKfQoueEEgbGluZSB7CiAgb3BhY2l0eTogMC41Owp9CgovKlNvbWUgZmFuY3kgYW5pbWF0aW9uIHRvIGRyYXcgY2hhcnQqLwpzdmcgLmxpbmVDaGFydCA+IHBhdGggewogIHN0cm9rZTogI2VjYmMzYTsKICBzdHJva2Utd2lkdGg6IDM7CiAgc3Ryb2tlLWRhc2hhcnJheTogNDgxMy43MTM7CiAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDQ4MTMuNzEzOwogIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGRyYXcyOwogIGFuaW1hdGlvbi1uYW1lOiBkcmF3MjsKICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMTBzOwogIGFuaW1hdGlvbi1kdXJhdGlvbjogMTBzOwogIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7CiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7CiAgLXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxOwogIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7CiAgLXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7CiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwp9CgouYW5pMiBzdmcgLmxpbmVDaGFydCA+IHBhdGggewogIHN0cm9rZTogI2VjYmMzYTsKICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBkcmF3LTI7CiAgYW5pbWF0aW9uLW5hbWU6IGRyYXctMjsKfQouYW5pMSBzdmcgLmxpbmVDaGFydCA+IHBhdGggewogIHN0cm9rZTogI2VjYmMzYTsKICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBkcmF3OwogIGFuaW1hdGlvbi1uYW1lOiBkcmF3Owp9CiNMYXllcl8xIHsKICB3aWR0aDogMTAwJTsKfQpALXdlYmtpdC1rZXlmcmFtZXMgZHJhdyB7CiAgODUlIHsKICB9CiAgMTAwJSB7CiAgICBzdHJva2UtZGFzaG9mZnNldDogMDsKICB9Cn0KQGtleWZyYW1lcyBkcmF3IHsKICA4NSUgewogIH0KICAxMDAlIHsKICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwOwogIH0KfQoKQC13ZWJraXQta2V5ZnJhbWVzIGRyYXctMiB7CiAgODUlIHsKICB9CiAgMTAwJSB7CiAgICBzdHJva2UtZGFzaG9mZnNldDogMDsKICB9Cn0KCkBrZXlmcmFtZXMgZHJhdy0yIHsKICA4NSUgewogIH0KICAxMDAlIHsKICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwOwogIH0KfQoudGV4dCB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGZvbnQtc2l6ZTogM3Z3OwogIG1hcmdpbjogMC41dncgMCAxLjV2dzsKfQoKc3ZnIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ3MTY2Owp9Cg=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/components","sourcesContent":["<!-- \nGood example here bar chart ---[ https://stackoverflow.com/questions/48726636/draw-d3-axis-without-direct-dom-manipulation \n-->\n\n<template><div>\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 800 330\"\n  preserveAspectRatio=\"xMidYMid meet\" >\n    \n    <g class='lineChart' v-bind:transform=\"translate\">\n      <axis class='yA' v-bind:scales=\"getScales().yAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY'/>\n      <axis class='xA' v-bind:scales=\"getScales().xAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsX()'/>\n      <axis class='grid' v-bind:scales=\"getScales().yGrid\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY' v-bind:style=\"{opacity: chartDefaults.gridOpacity}\"/>\n    <path class='line' :d=\"line\" />\n    </g>\n      \n  </svg>\n\n  <p class='text' > {{chartDefaults.title}}</p>\n</div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Axis from \"../components/Axis\";\nimport axios from 'axios';\n\nexport default {\n    name: \"vue-line-chart\",\n    components: {\n        axis: Axis // Using reusable component to draw x,y axis and Grid.\n    },\n    data() {\n        return {\n        data: [],\n        chartDefaults: {\n            width: 800,\n            height: 300,\n            chartId: \"linechart-vue\",\n            title: \"UK Rainfall for 2018\",\n            margin: {\n            top: 5,\n            right: 5,\n            bottom: 15,\n            left: 50\n            },\n            gridOpacity: 1,\n            data: []\n        },\n        line: \"\",\n        //Translate co-ords for chart, x axis and yaxis. This is injected into template\n        translate: \"translate(\" + 50 + \",\" + 5 + \")\",\n        trnsY: \"translate(0,0)\",\n        trnsX: this.getTrnsx,\n        toggleClass: true\n        };\n    },\n    mounted() {\n        var scale = {};\n        //Kick off drawing chart once component is mounted\n        this.calculatePath();\n    },\n    methods: {\n        getTestData() {\n            const path = 'http://localhost:5000/chart_test';\n            axios.get(path)\n            .then((res) => {\n                this.data = res.data;\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                console.error(error);\n            });\n        },\n        getScales() {\n        // All the maths to work chart co ordinates and woring out Axis\n        var parseDate = d3.timeParse(\"%m-%d-%Y\");\n\n        this.data.forEach(function(d) {\n            d.date = parseDate(d.day);\n        });\n\n        const x = d3\n            .scaleTime()\n            .domain(\n            d3.extent(this.data, function(d) {\n                return d.date;\n            })\n            )\n            .rangeRound([0, this.chartDefaults.width - 100]);\n        const y = d3\n            .scaleLinear()\n            .domain([\n            0,\n            d3.max(this.data, function(d) {\n                return d.count + 100;\n            })\n            ])\n            .range([this.chartDefaults.height, 0]);\n        d3.axisBottom().scale(x);\n        d3.axisLeft().scale(y);\n\n        //Key funtions to draw X-axis,YAxis and the grid. All uses component axis\n        //play around with time format to get it to display as you want : d3.timeFormat(\"%b-%d\")\n        var xAxis = d3\n            .axisBottom()\n            .scale(x)\n            .tickFormat(d3.timeFormat(\"%b\"))\n            .tickValues(\n            this.data\n                .map(function(d, i) {\n                if (i > 0) {\n                    return d.date;\n                }\n                return false;\n                })\n                .splice(1)\n            )\n            .ticks(4);\n\n        var yAxis = d3\n            .axisLeft()\n            .scale(y)\n            .ticks(5);\n        var yGrid = d3\n            .axisLeft()\n            .scale(y)\n            .tickSize(-(this.chartDefaults.width - 100), 0, 0)\n            .tickFormat(\"\");\n        // Return the key calculations and functions to draw the chart\n        return {\n            x,\n            y,\n            xAxis,\n            yAxis,\n            yGrid\n        };\n        },\n        getTrnsx(chartDefaults) {\n        //works out translate value in realtive to dynamic height\n        const t = \"translate(0,\" + this.chartDefaults.height + \")\";\n        return t;\n        },\n        calculatePath() {\n        //Get key calculation funtions to draw chart , Ie scale, axis mapping and plotting\n        const scale = this.getScales();\n        // Define calcultion to draw chart\n        const path = d3\n            .line()\n            .x(d => {\n            return scale.x(d.date);\n            })\n            .y(d => {\n            return scale.y(d.count);\n            })\n            .curve(d3.curveCardinal);\n\n        // draw line then this.line is injected into the template\n        this.line = path(this.data);\n        }\n    },\n    created() {\n        this.getTestData();\n    },\n};\n</script>\n<!-- css loaderhttps://vue-loader.vuejs.org/guide/scoped-css.html#mixing-local-and-global-styles -->\n<style>\ntext {\n  color: #fff;\n}\n\npath.line {\n  fill: none;\n  stroke: #ecbc3a;\n  stroke-width: 3px;\n}\n\n.grid line {\n  opacity: 0.05;\n}\n.xA line {\n  opacity: 0.5;\n}\n\n/*Some fancy animation to draw chart*/\nsvg .lineChart > path {\n  stroke: #ecbc3a;\n  stroke-width: 3;\n  stroke-dasharray: 4813.713;\n  stroke-dashoffset: 4813.713;\n  -webkit-animation-name: draw2;\n  animation-name: draw2;\n  -webkit-animation-duration: 10s;\n  animation-duration: 10s;\n  -webkit-animation-fill-mode: forwards;\n  animation-fill-mode: forwards;\n  -webkit-animation-iteration-count: 1;\n  animation-iteration-count: 1;\n  -webkit-animation-timing-function: linear;\n  animation-timing-function: linear;\n}\n\n.ani2 svg .lineChart > path {\n  stroke: #ecbc3a;\n  -webkit-animation-name: draw-2;\n  animation-name: draw-2;\n}\n.ani1 svg .lineChart > path {\n  stroke: #ecbc3a;\n  -webkit-animation-name: draw;\n  animation-name: draw;\n}\n#Layer_1 {\n  width: 100%;\n}\n@-webkit-keyframes draw {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes draw {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n\n@-webkit-keyframes draw-2 {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n\n@keyframes draw-2 {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n.text {\n  display: inline-block;\n  font-size: 3vw;\n  margin: 0.5vw 0 1.5vw;\n}\n\nsvg {\n  background-color: #f47166;\n}\n</style>\n"]}]}