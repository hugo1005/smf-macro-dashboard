{"remainingRequest":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/src/components/LineChart.vue","mtime":1604946246621},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hugo/Dropbox/hugo_documents_folder/SMF_RISK/dashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKaW1wb3J0IEF4aXMgZnJvbSAiLi4vY29tcG9uZW50cy9BeGlzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJ2dWUtbGluZS1jaGFydCIsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgYXhpczogQXhpcyAvLyBVc2luZyByZXVzYWJsZSBjb21wb25lbnQgdG8gZHJhdyB4LHkgYXhpcyBhbmQgR3JpZC4KICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgZGF0YTogW10sCiAgICAgICAgY2hhcnREZWZhdWx0czogewogICAgICAgICAgICB3aWR0aDogODAwLAogICAgICAgICAgICBoZWlnaHQ6IDMwMCwKICAgICAgICAgICAgY2hhcnRJZDogImxpbmVjaGFydC12dWUiLAogICAgICAgICAgICB0aXRsZTogIlVLIFJhaW5mYWxsIGZvciAyMDE4IiwKICAgICAgICAgICAgbWFyZ2luOiB7CiAgICAgICAgICAgIHRvcDogNSwKICAgICAgICAgICAgcmlnaHQ6IDUsCiAgICAgICAgICAgIGJvdHRvbTogMTUsCiAgICAgICAgICAgIGxlZnQ6IDUwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGdyaWRPcGFjaXR5OiAxLAogICAgICAgICAgICBkYXRhOiBbXQogICAgICAgIH0sCiAgICAgICAgbGluZTogIiIsCiAgICAgICAgLy9UcmFuc2xhdGUgY28tb3JkcyBmb3IgY2hhcnQsIHggYXhpcyBhbmQgeWF4aXMuIFRoaXMgaXMgaW5qZWN0ZWQgaW50byB0ZW1wbGF0ZQogICAgICAgIHRyYW5zbGF0ZTogInRyYW5zbGF0ZSgiICsgNTAgKyAiLCIgKyA1ICsgIikiLAogICAgICAgIHRybnNZOiAidHJhbnNsYXRlKDAsMCkiLAogICAgICAgIHRybnNYOiB0aGlzLmdldFRybnN4LAogICAgICAgIHRvZ2dsZUNsYXNzOiB0cnVlCiAgICAgICAgfTsKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHZhciBzY2FsZSA9IHt9OwogICAgICAgIC8vS2ljayBvZmYgZHJhd2luZyBjaGFydCBvbmNlIGNvbXBvbmVudCBpcyBtb3VudGVkCiAgICAgICAgdGhpcy5jYWxjdWxhdGVQYXRoKCk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldFRlc3REYXRhKCkgewogICAgICAgICAgICBjb25zdCBwYXRoID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9jaGFydF90ZXN0JzsKICAgICAgICAgICAgYXhpb3MuZ2V0KHBhdGgpCiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGdldFNjYWxlcygpIHsKICAgICAgICAvLyBBbGwgdGhlIG1hdGhzIHRvIHdvcmsgY2hhcnQgY28gb3JkaW5hdGVzIGFuZCB3b3Jpbmcgb3V0IEF4aXMKICAgICAgICB2YXIgcGFyc2VEYXRlID0gZDMudGltZVBhcnNlKCIlbS0lZC0lWSIpOwoKICAgICAgICB0aGlzLmRhdGEuZm9yRWFjaChmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIGQuZGF0ZSA9IHBhcnNlRGF0ZShkLmRheSk7CiAgICAgICAgfSk7CgogICAgICAgIGNvbnN0IHggPSBkMwogICAgICAgICAgICAuc2NhbGVUaW1lKCkKICAgICAgICAgICAgLmRvbWFpbigKICAgICAgICAgICAgZDMuZXh0ZW50KHRoaXMuZGF0YSwgZnVuY3Rpb24oZCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGQuZGF0ZTsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgKQogICAgICAgICAgICAucmFuZ2VSb3VuZChbMCwgdGhpcy5jaGFydERlZmF1bHRzLndpZHRoIC0gMTAwXSk7CiAgICAgICAgY29uc3QgeSA9IGQzCiAgICAgICAgICAgIC5zY2FsZUxpbmVhcigpCiAgICAgICAgICAgIC5kb21haW4oWwogICAgICAgICAgICAwLAogICAgICAgICAgICBkMy5tYXgodGhpcy5kYXRhLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZC5jb3VudCArIDEwMDsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgXSkKICAgICAgICAgICAgLnJhbmdlKFt0aGlzLmNoYXJ0RGVmYXVsdHMuaGVpZ2h0LCAwXSk7CiAgICAgICAgZDMuYXhpc0JvdHRvbSgpLnNjYWxlKHgpOwogICAgICAgIGQzLmF4aXNMZWZ0KCkuc2NhbGUoeSk7CgogICAgICAgIC8vS2V5IGZ1bnRpb25zIHRvIGRyYXcgWC1heGlzLFlBeGlzIGFuZCB0aGUgZ3JpZC4gQWxsIHVzZXMgY29tcG9uZW50IGF4aXMKICAgICAgICAvL3BsYXkgYXJvdW5kIHdpdGggdGltZSBmb3JtYXQgdG8gZ2V0IGl0IHRvIGRpc3BsYXkgYXMgeW91IHdhbnQgOiBkMy50aW1lRm9ybWF0KCIlYi0lZCIpCiAgICAgICAgdmFyIHhBeGlzID0gZDMKICAgICAgICAgICAgLmF4aXNCb3R0b20oKQogICAgICAgICAgICAuc2NhbGUoeCkKICAgICAgICAgICAgLnRpY2tGb3JtYXQoZDMudGltZUZvcm1hdCgiJWIiKSkKICAgICAgICAgICAgLnRpY2tWYWx1ZXMoCiAgICAgICAgICAgIHRoaXMuZGF0YQogICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbihkLCBpKSB7CiAgICAgICAgICAgICAgICBpZiAoaSA+IDApIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5kYXRlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5zcGxpY2UoMSkKICAgICAgICAgICAgKQogICAgICAgICAgICAudGlja3MoNCk7CgogICAgICAgIHZhciB5QXhpcyA9IGQzCiAgICAgICAgICAgIC5heGlzTGVmdCgpCiAgICAgICAgICAgIC5zY2FsZSh5KQogICAgICAgICAgICAudGlja3MoNSk7CiAgICAgICAgdmFyIHlHcmlkID0gZDMKICAgICAgICAgICAgLmF4aXNMZWZ0KCkKICAgICAgICAgICAgLnNjYWxlKHkpCiAgICAgICAgICAgIC50aWNrU2l6ZSgtKHRoaXMuY2hhcnREZWZhdWx0cy53aWR0aCAtIDEwMCksIDAsIDApCiAgICAgICAgICAgIC50aWNrRm9ybWF0KCIiKTsKICAgICAgICAvLyBSZXR1cm4gdGhlIGtleSBjYWxjdWxhdGlvbnMgYW5kIGZ1bmN0aW9ucyB0byBkcmF3IHRoZSBjaGFydAogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHgsCiAgICAgICAgICAgIHksCiAgICAgICAgICAgIHhBeGlzLAogICAgICAgICAgICB5QXhpcywKICAgICAgICAgICAgeUdyaWQKICAgICAgICB9OwogICAgICAgIH0sCiAgICAgICAgZ2V0VHJuc3goY2hhcnREZWZhdWx0cykgewogICAgICAgIC8vd29ya3Mgb3V0IHRyYW5zbGF0ZSB2YWx1ZSBpbiByZWFsdGl2ZSB0byBkeW5hbWljIGhlaWdodAogICAgICAgIGNvbnN0IHQgPSAidHJhbnNsYXRlKDAsIiArIHRoaXMuY2hhcnREZWZhdWx0cy5oZWlnaHQgKyAiKSI7CiAgICAgICAgcmV0dXJuIHQ7CiAgICAgICAgfSwKICAgICAgICBjYWxjdWxhdGVQYXRoKCkgewogICAgICAgIC8vR2V0IGtleSBjYWxjdWxhdGlvbiBmdW50aW9ucyB0byBkcmF3IGNoYXJ0ICwgSWUgc2NhbGUsIGF4aXMgbWFwcGluZyBhbmQgcGxvdHRpbmcKICAgICAgICBjb25zdCBzY2FsZSA9IHRoaXMuZ2V0U2NhbGVzKCk7CiAgICAgICAgLy8gRGVmaW5lIGNhbGN1bHRpb24gdG8gZHJhdyBjaGFydAogICAgICAgIGNvbnN0IHBhdGggPSBkMwogICAgICAgICAgICAubGluZSgpCiAgICAgICAgICAgIC54KGQgPT4gewogICAgICAgICAgICByZXR1cm4gc2NhbGUueChkLmRhdGUpOwogICAgICAgICAgICB9KQogICAgICAgICAgICAueShkID0+IHsKICAgICAgICAgICAgcmV0dXJuIHNjYWxlLnkoZC5jb3VudCk7CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jdXJ2ZShkMy5jdXJ2ZUNhcmRpbmFsKTsKCiAgICAgICAgLy8gZHJhdyBsaW5lIHRoZW4gdGhpcy5saW5lIGlzIGluamVjdGVkIGludG8gdGhlIHRlbXBsYXRlCiAgICAgICAgdGhpcy5saW5lID0gcGF0aCh0aGlzLmRhdGEpOwogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuZ2V0VGVzdERhdGEoKTsKICAgIH0sCn07Cg=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"LineChart.vue","sourceRoot":"src/components","sourcesContent":["<!-- \nGood example here bar chart ---[ https://stackoverflow.com/questions/48726636/draw-d3-axis-without-direct-dom-manipulation \n-->\n\n<template><div>\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 800 330\"\n  preserveAspectRatio=\"xMidYMid meet\" >\n    \n    <g class='lineChart' v-bind:transform=\"translate\">\n      <axis class='yA' v-bind:scales=\"getScales().yAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY'/>\n      <axis class='xA' v-bind:scales=\"getScales().xAxis\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsX()'/>\n      <axis class='grid' v-bind:scales=\"getScales().yGrid\" v-bind:chartDefaults='chartDefaults' v-bind:data='data' v-bind:trns='trnsY' v-bind:style=\"{opacity: chartDefaults.gridOpacity}\"/>\n    <path class='line' :d=\"line\" />\n    </g>\n      \n  </svg>\n\n  <p class='text' > {{chartDefaults.title}}</p>\n</div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Axis from \"../components/Axis\";\nimport axios from 'axios';\n\nexport default {\n    name: \"vue-line-chart\",\n    components: {\n        axis: Axis // Using reusable component to draw x,y axis and Grid.\n    },\n    data() {\n        return {\n        data: [],\n        chartDefaults: {\n            width: 800,\n            height: 300,\n            chartId: \"linechart-vue\",\n            title: \"UK Rainfall for 2018\",\n            margin: {\n            top: 5,\n            right: 5,\n            bottom: 15,\n            left: 50\n            },\n            gridOpacity: 1,\n            data: []\n        },\n        line: \"\",\n        //Translate co-ords for chart, x axis and yaxis. This is injected into template\n        translate: \"translate(\" + 50 + \",\" + 5 + \")\",\n        trnsY: \"translate(0,0)\",\n        trnsX: this.getTrnsx,\n        toggleClass: true\n        };\n    },\n    mounted() {\n        var scale = {};\n        //Kick off drawing chart once component is mounted\n        this.calculatePath();\n    },\n    methods: {\n        getTestData() {\n            const path = 'http://localhost:5000/chart_test';\n            axios.get(path)\n            .then((res) => {\n                this.data = res.data;\n            })\n            .catch((error) => {\n                // eslint-disable-next-line\n                console.error(error);\n            });\n        },\n        getScales() {\n        // All the maths to work chart co ordinates and woring out Axis\n        var parseDate = d3.timeParse(\"%m-%d-%Y\");\n\n        this.data.forEach(function(d) {\n            d.date = parseDate(d.day);\n        });\n\n        const x = d3\n            .scaleTime()\n            .domain(\n            d3.extent(this.data, function(d) {\n                return d.date;\n            })\n            )\n            .rangeRound([0, this.chartDefaults.width - 100]);\n        const y = d3\n            .scaleLinear()\n            .domain([\n            0,\n            d3.max(this.data, function(d) {\n                return d.count + 100;\n            })\n            ])\n            .range([this.chartDefaults.height, 0]);\n        d3.axisBottom().scale(x);\n        d3.axisLeft().scale(y);\n\n        //Key funtions to draw X-axis,YAxis and the grid. All uses component axis\n        //play around with time format to get it to display as you want : d3.timeFormat(\"%b-%d\")\n        var xAxis = d3\n            .axisBottom()\n            .scale(x)\n            .tickFormat(d3.timeFormat(\"%b\"))\n            .tickValues(\n            this.data\n                .map(function(d, i) {\n                if (i > 0) {\n                    return d.date;\n                }\n                return false;\n                })\n                .splice(1)\n            )\n            .ticks(4);\n\n        var yAxis = d3\n            .axisLeft()\n            .scale(y)\n            .ticks(5);\n        var yGrid = d3\n            .axisLeft()\n            .scale(y)\n            .tickSize(-(this.chartDefaults.width - 100), 0, 0)\n            .tickFormat(\"\");\n        // Return the key calculations and functions to draw the chart\n        return {\n            x,\n            y,\n            xAxis,\n            yAxis,\n            yGrid\n        };\n        },\n        getTrnsx(chartDefaults) {\n        //works out translate value in realtive to dynamic height\n        const t = \"translate(0,\" + this.chartDefaults.height + \")\";\n        return t;\n        },\n        calculatePath() {\n        //Get key calculation funtions to draw chart , Ie scale, axis mapping and plotting\n        const scale = this.getScales();\n        // Define calcultion to draw chart\n        const path = d3\n            .line()\n            .x(d => {\n            return scale.x(d.date);\n            })\n            .y(d => {\n            return scale.y(d.count);\n            })\n            .curve(d3.curveCardinal);\n\n        // draw line then this.line is injected into the template\n        this.line = path(this.data);\n        }\n    },\n    created() {\n        this.getTestData();\n    },\n};\n</script>\n<!-- css loaderhttps://vue-loader.vuejs.org/guide/scoped-css.html#mixing-local-and-global-styles -->\n<style>\ntext {\n  color: #fff;\n}\n\npath.line {\n  fill: none;\n  stroke: #ecbc3a;\n  stroke-width: 3px;\n}\n\n.grid line {\n  opacity: 0.05;\n}\n.xA line {\n  opacity: 0.5;\n}\n\n/*Some fancy animation to draw chart*/\nsvg .lineChart > path {\n  stroke: #ecbc3a;\n  stroke-width: 3;\n  stroke-dasharray: 4813.713;\n  stroke-dashoffset: 4813.713;\n  -webkit-animation-name: draw2;\n  animation-name: draw2;\n  -webkit-animation-duration: 10s;\n  animation-duration: 10s;\n  -webkit-animation-fill-mode: forwards;\n  animation-fill-mode: forwards;\n  -webkit-animation-iteration-count: 1;\n  animation-iteration-count: 1;\n  -webkit-animation-timing-function: linear;\n  animation-timing-function: linear;\n}\n\n.ani2 svg .lineChart > path {\n  stroke: #ecbc3a;\n  -webkit-animation-name: draw-2;\n  animation-name: draw-2;\n}\n.ani1 svg .lineChart > path {\n  stroke: #ecbc3a;\n  -webkit-animation-name: draw;\n  animation-name: draw;\n}\n#Layer_1 {\n  width: 100%;\n}\n@-webkit-keyframes draw {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes draw {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n\n@-webkit-keyframes draw-2 {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n\n@keyframes draw-2 {\n  85% {\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n.text {\n  display: inline-block;\n  font-size: 3vw;\n  margin: 0.5vw 0 1.5vw;\n}\n\nsvg {\n  background-color: #f47166;\n}\n</style>\n"]}]}